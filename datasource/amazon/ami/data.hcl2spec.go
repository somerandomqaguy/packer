// Code generated by "mapstructure-to-hcl2 -type DatasourceOutput"; DO NOT EDIT.

package ami

import (
	"github.com/hashicorp/hcl/v2/hcldec"
	"github.com/zclconf/go-cty/cty"
)

// FlatDatasourceOutput is an auto-generated flat version of DatasourceOutput.
// Where the contents of a field with a `mapstructure:,squash` tag are bubbled up.
type FlatDatasourceOutput struct {
	ID           *string           `cty:"id" hcl:"id"`
	Name         *string           `cty:"name" hcl:"name"`
	CreationDate *string           `cty:"creation_date" hcl:"creation_date"`
	Owner        *string           `cty:"owner" hcl:"owner"`
	OwnerName    *string           `cty:"owner_name" hcl:"owner_name"`
	Tags         map[string]string `cty:"tags" hcl:"tags"`
}

// FlatMapstructure returns a new FlatDatasourceOutput.
// FlatDatasourceOutput is an auto-generated flat version of DatasourceOutput.
// Where the contents a fields with a `mapstructure:,squash` tag are bubbled up.
func (*DatasourceOutput) FlatMapstructure() interface{ HCL2Spec() map[string]hcldec.Spec } {
	return new(FlatDatasourceOutput)
}

// HCL2Spec returns the hcl spec of a DatasourceOutput.
// This spec is used by HCL to read the fields of DatasourceOutput.
// The decoded values from this spec will then be applied to a FlatDatasourceOutput.
func (*FlatDatasourceOutput) HCL2Spec() map[string]hcldec.Spec {
	s := map[string]hcldec.Spec{
		"id":            &hcldec.AttrSpec{Name: "id", Type: cty.String, Required: false},
		"name":          &hcldec.AttrSpec{Name: "name", Type: cty.String, Required: false},
		"creation_date": &hcldec.AttrSpec{Name: "creation_date", Type: cty.String, Required: false},
		"owner":         &hcldec.AttrSpec{Name: "owner", Type: cty.String, Required: false},
		"owner_name":    &hcldec.AttrSpec{Name: "owner_name", Type: cty.String, Required: false},
		"tags":          &hcldec.AttrSpec{Name: "tags", Type: cty.Map(cty.String), Required: false},
	}
	return s
}
